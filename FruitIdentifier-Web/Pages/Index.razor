@inject FruitIdentifierService FruitService;

@page "/"

<PageTitle>FruitIdentifier</PageTitle>

<img src="@path"/>
<InputFile OnChange="OnFileChanged" multiple></InputFile>
<pre>Result: @status</pre>
<pre>Result: @result</pre>
<pre>Path: @path</pre>


@code {
    string? status = "Awating image";
    string? result;
    string? path;

    async Task OnFileChanged(InputFileChangeEventArgs e)
    {
        status = "Getting Image Prediction";
        path = "C:\\Users\\Aramoniax\\Desktop\\Test images\\";
        try
        {
            var buffer = new byte[4096];
            foreach (var file in e.GetMultipleFiles(e.FileCount))
            {
                path += file.Name;
                _ = InvokeAsync(StateHasChanged);

                using var stream = file.OpenReadStream(maxAllowedSize: long.MaxValue);
                while (true)
                {
                    var read = await stream.ReadAsync(buffer);
                    if (read == 0)
                        break;
                }
                result = FruitService.GetImagePrediction(path);
                status = "Done";
            }
        }
        catch (Exception ex)
        {
            result += "\nError: " + ex.Message;
            _ = InvokeAsync(StateHasChanged);
        }
    }
}